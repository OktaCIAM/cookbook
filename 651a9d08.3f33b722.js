(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{79:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return a})),n.d(t,"metadata",(function(){return c})),n.d(t,"toc",(function(){return l})),n.d(t,"default",(function(){return s}));var o=n(3),r=n(7),i=(n(0),n(92)),a={id:"logo-per-context",title:"Configure a Logo Based on App Context",sidebar_label:"Logo Based on App Context",slug:"/logo-per-app-context",description:"Dynamically render different logos for the Okta Signin Widget per application context.",keywords:["Okta CIAM","Logo based on Application Context","Multiple Applications with Okta","Okta Signin Widget"]},c={unversionedId:"sign-in/logo-per-context",id:"sign-in/logo-per-context",isDocsHomePage:!1,title:"Configure a Logo Based on App Context",description:"Dynamically render different logos for the Okta Signin Widget per application context.",source:"@site/docs/sign-in/logo-per-context.md",slug:"/logo-per-app-context",permalink:"/docs/logo-per-app-context",editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/sign-in/logo-per-context.md",version:"current",sidebar_label:"Logo Based on App Context",sidebar:"docs",previous:{title:"Initialize IdP Discovery",permalink:"/docs/initialize-idp-discovery"},next:{title:"Hide Connecting To Banner",permalink:"/docs/hide-connect-banner"}},l=[{value:"Problem",id:"problem",children:[]},{value:"Solution",id:"solution",children:[]},{value:"Discussion",id:"discussion",children:[]}],p={toc:l};function s(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(i.b)("wrapper",Object(o.a)({},p,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("h2",{id:"problem"},"Problem"),Object(i.b)("p",null,"For multi-brand companies trying to consolidate their brands through a white label application, you may want to dynamically change the logo per application or context id."),Object(i.b)("h2",{id:"solution"},"Solution"),Object(i.b)("p",null,"The Okta-hosted sign-in page is ",Object(i.b)("a",{parentName:"p",href:"https://developer.okta.com/docs/guides/style-the-widget/customization-examples/#per-application-customization"},"application-aware")," as stated in the developer docs. Simply leverage the ",Object(i.b)("inlineCode",{parentName:"p"},"OktaUtils")," to pull the context and apply simple logic to configure a logo per client id."),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"Example:")),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-js"},"// Helper function described in developer docs\nconst getClientId = () => {\n    if (!OktaUtil) return;\n\n    const requestContext = OktaUtil.getRequestContext();\n    if (requestContext && requestContext.target && requestContext.target.clientId) {\n        return requestContext.target.clientId;\n    }\n}\n\nconst clientId = getClientId();\nconst config = OktaUtil.getSignInWidgetConfig();\n\n// Dynamic Map or you can use a switch statement\nconst LOGO_IMG_URL = {\n    CLIENT_ID_1: URL_1,\n    CLIENT_ID_2: URL_2,\n    CLIENT_ID_3: URL_3,\n    CLIENT_ID_4: URL_4\n}[clientId];\n\nconfig.logo = LOGO_IMG_URL;\n")),Object(i.b)("h2",{id:"discussion"},"Discussion"),Object(i.b)("p",null,"This can easily be extended based on domain url as well."))}s.isMDXComponent=!0},92:function(e,t,n){"use strict";n.d(t,"a",(function(){return u})),n.d(t,"b",(function(){return b}));var o=n(0),r=n.n(o);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},i=Object.keys(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=r.a.createContext({}),s=function(e){var t=r.a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},u=function(e){var t=s(e.components);return r.a.createElement(p.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},g=r.a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,a=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=s(n),g=o,b=u["".concat(a,".").concat(g)]||u[g]||d[g]||i;return n?r.a.createElement(b,c(c({ref:t},p),{},{components:n})):r.a.createElement(b,c({ref:t},p))}));function b(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=g;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:o,a[1]=c;for(var p=2;p<i;p++)a[p]=n[p];return r.a.createElement.apply(null,a)}return r.a.createElement.apply(null,n)}g.displayName="MDXCreateElement"}}]);