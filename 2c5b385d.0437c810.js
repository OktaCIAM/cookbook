(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{75:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return a})),t.d(n,"metadata",(function(){return s})),t.d(n,"toc",(function(){return c})),t.d(n,"default",(function(){return l}));var r=t(3),i=t(7),o=(t(0),t(90)),a={id:"init-idp-discovery",title:"Initialize IdP Discovery",sidebar_label:"Initialize IdP Discovery",slug:"/initialize-idp-discovery",description:"Streamline the IdP Discovery user experience for users initiating login from an external application.",keywords:["IdP Discovery","IdP Routing Rules","Okta Sign In Widget","Customer Identity and Access Management"]},s={unversionedId:"sign-in/init-idp-discovery",id:"sign-in/init-idp-discovery",isDocsHomePage:!1,title:"Initialize IdP Discovery",description:"Streamline the IdP Discovery user experience for users initiating login from an external application.",source:"@site/docs/sign-in/init-idp-discovery.md",slug:"/initialize-idp-discovery",permalink:"/docs/initialize-idp-discovery",editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/sign-in/init-idp-discovery.md",version:"current",sidebar_label:"Initialize IdP Discovery",sidebar:"docs",previous:{title:"Auto Send SMS Code Workaround",permalink:"/docs/auto-send-sms-code"},next:{title:"Configure a Logo Based on App Context",permalink:"/docs/logo-per-app-context"}},c=[{value:"Problem",id:"problem",children:[]},{value:"Solution",id:"solution",children:[]},{value:"Discussion",id:"discussion",children:[]},{value:"Credits",id:"credits",children:[]}],u={toc:c};function l(e){var n=e.components,t=Object(i.a)(e,["components"]);return Object(o.b)("wrapper",Object(r.a)({},u,t,{components:n,mdxType:"MDXLayout"}),Object(o.b)("blockquote",null,Object(o.b)("p",{parentName:"blockquote"},"Requires Sign In Widget version 2.5.0 or above")),Object(o.b)("h2",{id:"problem"},"Problem"),Object(o.b)("p",null,'In order for Okta\'s IdP Discovery policies to initialize for the SIW (Sign in Widget), a user must enter their existing credentials and trigger a login request. This can be a "chunky" user experience if the user is arriving from a link or external portal. To streamline this experience, a developer may want to auto populate the email upon loading and trigger the routing rules immediately.'),Object(o.b)("h2",{id:"solution"},"Solution"),Object(o.b)("blockquote",null,Object(o.b)("p",{parentName:"blockquote"},"\ud83d\udd05  ",Object(o.b)("strong",{parentName:"p"},"Preview ",Object(o.b)("a",{parentName:"strong",href:"https://spot-sable-quesadilla.glitch.me/?username=foobar%40foo.com"},"Glitch example")))),Object(o.b)("p",null,"Pass along the context of the user's email in a query string, and leverage the sign in widget's context state and event handlers to populate the username field to trigger the login."),Object(o.b)("p",null,"Append a url encoded query string with the user's email to the link of your sign in page: ",Object(o.b)("inlineCode",{parentName:"p"},"https://your_app.com/login/page?username=USERNAME_HERE")),Object(o.b)("blockquote",null,Object(o.b)("p",{parentName:"blockquote"},"Note: the query parameter doesn't need to be limited to username, you can name the parameter anything you please")),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"Example:")),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-js"},'const signIn = new OktaSignIn({\n    // ... ensure to add other required configurations\n    features: {\n        idpDiscovery: true\n    },\n    idpDiscovery : {\n        // Ensure your redirect is set for application context\n        requestContext: window.location.href\n    }\n}\n\nsignIn.on(\'ready\', context => {\n  // You might need to change the controller\n  if (context.controller === "idp-discovery") {\n    const params = new URL(document.location).searchParams;\n    let username = params.get("username");\n    // Replace username with any parameter if you are using something else\n    if (username) {\n        username = decodeURIComponent(username);\n        const usernameInput = document.getElementById("idp-discovery-username");\n        usernameInput.value = username;\n        usernameInput.dispatchEvent(new Event("change", { "bubbles": true }));\n\n        const usernameSubmit = document.getElementById("idp-discovery-submit");\n        usernameSubmit.click();\n    } \n  }\n});\n')),Object(o.b)("h2",{id:"discussion"},"Discussion"),Object(o.b)("p",null,"It's important to mention that query strings are exposed in the user's browsers history and on server logs. Therefore, make an appropriate decision in regards to security and user-experience."),Object(o.b)("h2",{id:"credits"},"Credits"),Object(o.b)("p",null,"Kudos to the EMEA CIAM Specialists team for the origins of this use case and solution and ",Object(o.b)("a",{parentName:"p",href:"https://github.com/brh55"},"Brandon Him (@brh55)")," for writing and finalizing the recipe."))}l.isMDXComponent=!0},90:function(e,n,t){"use strict";t.d(n,"a",(function(){return p})),t.d(n,"b",(function(){return b}));var r=t(0),i=t.n(r);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var u=i.a.createContext({}),l=function(e){var n=i.a.useContext(u),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},p=function(e){var n=l(e.components);return i.a.createElement(u.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return i.a.createElement(i.a.Fragment,{},n)}},m=i.a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,o=e.originalType,a=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),p=l(t),m=r,b=p["".concat(a,".").concat(m)]||p[m]||d[m]||o;return t?i.a.createElement(b,s(s({ref:n},u),{},{components:t})):i.a.createElement(b,s({ref:n},u))}));function b(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=t.length,a=new Array(o);a[0]=m;var s={};for(var c in n)hasOwnProperty.call(n,c)&&(s[c]=n[c]);s.originalType=e,s.mdxType="string"==typeof e?e:r,a[1]=s;for(var u=2;u<o;u++)a[u]=t[u];return i.a.createElement.apply(null,a)}return i.a.createElement.apply(null,t)}m.displayName="MDXCreateElement"}}]);